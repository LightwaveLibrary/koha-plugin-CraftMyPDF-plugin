[% USE raw %]
[% USE HtmlTags %]
[% USE Koha %]
[% USE Asset %]
[% USE KohaDates %]
[% PROCESS 'i18n.inc' %]
[% SET footerjs = 1 %]
[% INCLUDE 'doc-head-open.inc' %]
<title>[% FILTER collapse %]
    [% t("CraftMyPDF Integration Configuration") | html %] &rsaquo;
    [% t("Koha") | html %]
[% END %]</title>
[% INCLUDE 'doc-head-close.inc' %]
<style>
    .template-select {
        display: inline-block !important;
        visibility: visible !important;
        min-width: 200px;
        padding: 5px;
        font-size: 14px;
        height: auto;
    }
    .fetch-templates-btn {
        margin-left: 10px;
        vertical-align: middle;
    }
    .fetch-templates-btn:disabled {
        opacity: 0.5;
        cursor: not-allowed;
    }
    .template-container {
        display: flex;
        align-items: center;
    }
</style>
</head>
<body id="plugins_craftmypdf" class="plugins">
[% INCLUDE 'header.inc' %]
[% PROCESS 'about-team.inc' %]

[% WRAPPER 'sub-header.inc' %]
    [% WRAPPER breadcrumbs %]
        [% WRAPPER breadcrumb_item %]
            <a href="/cgi-bin/koha/plugins/plugins-home.pl">Plugins</a>
        [% END %]
        [% WRAPPER breadcrumb_item bc_active=1 %]
            <span>CraftMyPDF Integration Configuration</span>
        [% END %]
    [% END #/ WRAPPER breadcrumbs %]
[% END #/ WRAPPER sub-header.inc %]

<div id="doc3" class="main container-fluid">
    <h1>CraftMyPDF Integration Configuration</h1>

    <div class="page-section clearfix">
        <form method="post">
            [% INCLUDE 'csrf-token.inc' %]
            <input type="hidden" name="class" value="[% CLASS | html %]">
            <input type="hidden" name="method" value="[% METHOD | html %]">
            <input type="hidden" name="save" value="1">

            <fieldset class="rows">
                <legend>CraftMyPDF Settings</legend>
                <ol>
                    <li>
                        <label for="api_key" class="required">CraftMyPDF API Key:</label>
                        <input type="text" name="api_key" id="api_key" value="[% api_key | html %]" size="50" required>
                    </li>
                    <li>
                        <label for="delete_on_uninstall">Delete settings on uninstall:</label>
                        <input type="checkbox" name="delete_on_uninstall" id="delete_on_uninstall" [% IF delete_on_uninstall == '1' %]checked[% END %]>
                    </li>
                </ol>
            </fieldset>

            <fieldset class="rows">
                <legend>Reports Configuration</legend>
                <table id="reportTable" class="table">
                    <thead>
                        <tr>
                            <th class="required">Koha Report ID</th>
                            <th class="required">Template ID</th>
                            <th>Complex JSON?</th>
                            <th>Action</th>
                        </tr>
                    </thead>
                    <tbody>
                        [% IF configs.size %]
                            [% FOREACH c IN configs %]
                                <tr>
                                    <td><input type="text" name="report_id[]" value="[% c.report_id | html %]" required></td>
                                    <td>
                                        <div class="template-container">
                                            <select name="template_id[]" class="template-select" required>
                                                <option value="">Select a template</option>
                                                [% IF c.template_id %]
                                                    <option value="[% c.template_id | html %]" selected>[% c.template_id | html %]</option>
                                                [% END %]
                                            </select>
                                            <button type="button" class="btn btn-primary fetch-templates-btn" disabled>Fetch CraftMyPDF Templates</button>
                                        </div>
                                    </td>
                                    <td>
                                        <!-- Hidden input stores the value submitted to server; checkbox is purely UI and synced on submit -->
                                        <input type="hidden" name="complex_json[]" value="[% IF c.complex_json == '1' %]1[% ELSE %]0[% END %]">
                                        <label style="display:inline-flex;align-items:center;gap:6px;">
                                            <input type="checkbox" class="complex-json-checkbox" [% IF c.complex_json == '1' %]checked[% END %]>
                                            <a href="#" class="complex-json-help" style="color:#007bff;margin-left:4px;">What's This?</a>
                                        </label>
                                    </td>
                                    <td>
                                        <div style="display:flex;gap:6px;align-items:center;">
                                            <button type="button" class="btn btn-success activate-editor-btn">Activate PDF Editor</button>
                                            <button type="button" class="btn btn-warning deactivate-editor-btn" disabled>Deactivate PDF Editor</button>
                                            <button type="button" class="btn btn-danger" onclick="deleteRow(this)">Delete</button>
                                        </div>
                                    </td>
                                </tr>
                                <tr class="editor-iframe-row" style="display:none;">
                                    <td colspan="4" style="padding:0;border-top:0;">
                                        <div class="editor-iframe-container" style="width:100%;height:600px;display:none;">
                                            <iframe class="editor-iframe" style="width:100%;height:100%;border:0;" sandbox="allow-scripts allow-same-origin allow-forms allow-modals"></iframe>
                                        </div>
                                    </td>
                                </tr>
                            [% END %]
                        [% ELSE %]
                            <tr>
                                <td><input type="text" name="report_id[]" required></td>
                                <td>
                                    <div class="template-container">
                                        <select name="template_id[]" class="template-select" required>
                                            <option value="">Select a template</option>
                                        </select>
                                        <button type="button" class="btn btn-primary fetch-templates-btn" disabled>Fetch CraftMyPDF Templates</button>
                                    </div>
                                </td>
                                <td>
                                    <input type="hidden" name="complex_json[]" value="0">
                                    <label style="display:inline-flex;align-items:center;gap:6px;">
                                        <input type="checkbox" class="complex-json-checkbox">
                                        <a href="#" class="complex-json-help" style="color:#007bff;margin-left:4px;">What's This?</a>
                                    </label>
                                </td>
                                <td><button type="button" class="btn btn-danger" onclick="deleteRow(this)">Delete</button></td>
                            </tr>
                        [% END %]
                    </tbody>
                </table>
                <button type="button" class="btn btn-primary" onclick="addRow()">Add Row</button>
            </fieldset>

            <fieldset class="action">
                <button class="btn btn-primary" type="submit">Save configuration</button>
                <a href="/cgi-bin/koha/plugins/plugins-home.pl" class="btn btn-default">Cancel</a>
            </fieldset>
        </form>
    </div>
</div>
[% INCLUDE 'intranet-bottom.inc' %]
<script>
function addRow() {
    var table = document.getElementById('reportTable').getElementsByTagName('tbody')[0];
    var row = table.insertRow();
    row.innerHTML = `
        <td><input type="text" name="report_id[]" required></td>
        <td>
            <div class="template-container">
                <select name="template_id[]" class="template-select" required>
                    <option value="">Select a template</option>
                </select>
                <button type="button" class="btn btn-primary fetch-templates-btn" disabled>Fetch CraftMyPDF Templates</button>
            </div>
        </td>
        <td>
            <!-- Hidden input stores the value submitted to server; checkbox is purely UI and synced on submit -->
            <input type="hidden" name="complex_json[]" value="0">
            <label style="display:inline-flex;align-items:center;gap:6px;">
                <input type="checkbox" class="complex-json-checkbox">
                <a href="#" class="complex-json-help" style="color:#007bff;margin-left:4px;">What's This?</a>
            </label>
        </td>
        <td><button type="button" class="btn btn-danger" onclick="deleteRow(this)">Delete</button></td>
    `;
    bindFetchButton(row.querySelector('.fetch-templates-btn'));
}

function deleteRow(btn) {
    var row = btn.parentNode.parentNode;
    row.parentNode.removeChild(row);
}

function getCsrfToken() {
    var metaTag = document.querySelector('meta[name="csrf-token"]');
    return metaTag ? metaTag.getAttribute('content') : '';
}

function bindFetchButton(button) {
    var apiKeyInput = document.getElementById('api_key');
    var select = button.parentNode.querySelector('.template-select');

    // Update button state based on API key
    function updateButtonState() {
        var apiKey = apiKeyInput ? apiKeyInput.value.trim() : '';
        button.disabled = !apiKey;
        console.log('CraftMyPDF: Fetch button state updated, disabled:', button.disabled);
    }

    // Initial state and listen for API key changes
    updateButtonState();
    apiKeyInput.addEventListener('input', updateButtonState);

    button.addEventListener('click', function() {
        var apiKey = apiKeyInput ? apiKeyInput.value.trim() : '';
        if (!apiKey) {
            alert('Please enter a valid CraftMyPDF API key first.');
            console.log('CraftMyPDF: No API key provided');
            select.innerHTML = '<option value="">Select a template</option>';
            return;
        }

        button.disabled = true;
        select.disabled = true;
        select.innerHTML = '<option value="">Loading templates...</option>';
        console.log('CraftMyPDF: Fetching templates with API key: ' + apiKey.substring(0, 5) + '...');

        $.ajax({
            url: '/cgi-bin/koha/plugins/run.pl',
            type: 'POST',
            data: {
                class: 'Koha::Plugin::Com::LightwaveLibrary::CraftMyPDF',
                method: 'fetch_templates',
                api_key: apiKey,
                csrf_token: getCsrfToken()
            },
            dataType: 'json',
            success: function(data) {
                console.log('CraftMyPDF: Templates fetched for configuration: ', data);
                select.disabled = false;
                button.disabled = false;
                select.innerHTML = '<option value="">Select a template</option>';

                if (!data || !Array.isArray(data) || data.length === 0) {
                    console.warn('CraftMyPDF: No templates found or invalid response format:', data);
                    alert('No templates found.');
                    return;
                }

                try {
                    data.forEach(function(template) {
                        if (template.templateId && template.name) {
                            console.log('CraftMyPDF: Adding template:', template.name, template.templateId);
                            var option = document.createElement('option');
                            option.value = template.templateId;
                            option.text = template.name + ' (' + template.templateId + ')';
                            select.appendChild(option);
                        } else {
                            console.warn('CraftMyPDF: Skipping invalid template:', template);
                        }
                    });
                    console.log('CraftMyPDF: Dropdown populated with', data.length, 'templates');
                    // Force re-render
                    setTimeout(function() {
                        select.dispatchEvent(new Event('change'));
                        console.log('CraftMyPDF: Dropdown re-render triggered');
                    }, 100);
                } catch (e) {
                    console.error('CraftMyPDF: Error populating dropdown:', e);
                    alert('Error populating templates: ' + e.message);
                    select.innerHTML = '<option value="">Select a template</option>';
                    button.disabled = false;
                }
            },
            error: function(xhr, status, error) {
                console.error('CraftMyPDF: Failed to fetch templates: ', status, error, xhr.responseText);
                alert('Error fetching templates: ' + error);
                select.disabled = false;
                button.disabled = false;
                select.innerHTML = '<option value="">Select a template</option>';
            }
        });
    });
}

$(document).ready(function() {
    console.log('CraftMyPDF: Configuration page loaded');
    document.querySelectorAll('.fetch-templates-btn').forEach(function(button) {
        bindFetchButton(button);
    });
    // Bind help link clicks to show modal
    function bindHelpLinks() {
        document.querySelectorAll('.complex-json-help').forEach(function(link) {
            link.addEventListener('click', function(e) {
                e.preventDefault();
                var modal = document.getElementById('complexJsonModal');
                if (modal) modal.style.display = 'block';
            });
        });
    }
    bindHelpLinks();
    // Ensure newly added rows also have help binding by observing tbody
    var tbody = document.getElementById('reportTable').getElementsByTagName('tbody')[0];
    var observer = new MutationObserver(function(mutations) {
        mutations.forEach(function(m) {
            bindHelpLinks();
        });
    });
    observer.observe(tbody, { childList: true });
});
// Modal close handling
document.addEventListener('click', function(e) {
    var modal = document.getElementById('complexJsonModal');
    if (!modal) return;
    if (e.target.classList && e.target.classList.contains('complex-json-close')) {
        modal.style.display = 'none';
    }
    // Close when clicking outside modal content
    if (e.target == modal) {
        modal.style.display = 'none';
    }
});

// Insert modal HTML
var modalHtml = `
<div id="complexJsonModal" style="display:none;position:fixed;z-index:9999;left:0;top:0;width:100%;height:100%;overflow:auto;background-color:rgba(0,0,0,0.4);">
  <div style="background-color:#fff;margin:10% auto;padding:20px;border:1px solid #888;width:80%;max-width:700px;border-radius:6px;">
    <h3>Complex JSON Reports</h3>
    <p>A Complex JSON report is typically designed in the Data tab and contains at least one child array embedded inside the main items array. When this box is checked the Koha report is expected to output a pure JSON body. The plugin will send that JSON body unchanged to the CraftMyPDF API and will not perform any CSV-to-table conversion routines.</p>
    <p>Use this when your SQL returns a JSON object/array structure (for example using MySQL JSON_OBJECT / JSON_ARRAYAGG) rather than CSV rows.</p>
    <p style="font-size:90%;color:#555;margin-top:1rem;">Example: an SQL that returns a top-level object with an "items" array where each item contains an "item_lines" child array.</p>
    <div style="text-align:right;margin-top:1rem;"><button class="btn btn-default complex-json-close">Close</button></div>
  </div>
</div>`;
document.body.insertAdjacentHTML('beforeend', modalHtml);

// Sync complex_json checkbox states to hidden inputs before form submit
document.querySelector('form').addEventListener('submit', function(e) {
    try {
        var rows = document.querySelectorAll('#reportTable tbody tr');
        rows.forEach(function(row) {
            var hidden = row.querySelector('input[type=hidden][name="complex_json[]"]');
            var checkbox = row.querySelector('.complex-json-checkbox');
            if (hidden && checkbox) {
                hidden.value = checkbox.checked ? '1' : '0';
            }
        });
    } catch (err) {
        console.error('CraftMyPDF: Failed to sync complex_json values before submit', err);
    }
});
</script>
</body>
</html>
